{"ast":null,"code":"import _styled from \"@emotion/styled-base\";\nvar _jsxFileName = \"/Users/ygoldobin/yanton/thiswebsiteisnotaboutyou/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React from \"react\";\nimport Head from \"next/head\";\nimport chroma from \"chroma-js\";\nimport { css, jsx, Global, keyframes } from \"@emotion/core\";\nimport Nav from \"../components/nav\";\nimport geolocationParser from \"../geolocationParser\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst colors = chroma.scale([\"#fafa6e\", \"#2A4858\"]).mode(\"lch\").colors(600);\nconst buttons = colors.map(color => {\n  const Button = _styled(\"button\", {\n    target: \"ei2zyl20\",\n    label: \"Button\"\n  })(false ? {\n    name: \"txevan\",\n    styles: \"padding:32px;background-color:hotpink;font-size:24px;border-radius:4px;color:black;font-weight:bold;&:hover{color:white;}\"\n  } : {\n    name: \"txevan\",\n    styles: \"padding:32px;background-color:hotpink;font-size:24px;border-radius:4px;color:black;font-weight:bold;&:hover{color:white;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFlOEIiLCJmaWxlIjoiL1VzZXJzL3lnb2xkb2Jpbi95YW50b24vdGhpc3dlYnNpdGVpc25vdGFib3V0eW91L3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiO1xuaW1wb3J0IGNocm9tYSBmcm9tIFwiY2hyb21hLWpzXCI7XG5pbXBvcnQgc3R5bGVkIGZyb20gXCJAZW1vdGlvbi9zdHlsZWRcIjtcbmltcG9ydCB7IGNzcywganN4LCBHbG9iYWwsIGtleWZyYW1lcyB9IGZyb20gXCJAZW1vdGlvbi9jb3JlXCI7XG5cbmltcG9ydCBOYXYgZnJvbSBcIi4uL2NvbXBvbmVudHMvbmF2XCI7XG5pbXBvcnQgZ2VvbG9jYXRpb25QYXJzZXIgZnJvbSBcIi4uL2dlb2xvY2F0aW9uUGFyc2VyXCI7XG5cbmNvbnN0IGNvbG9ycyA9IGNocm9tYVxuICAuc2NhbGUoW1wiI2ZhZmE2ZVwiLCBcIiMyQTQ4NThcIl0pXG4gIC5tb2RlKFwibGNoXCIpXG4gIC5jb2xvcnMoNjAwKTtcblxuY29uc3QgYnV0dG9ucyA9IGNvbG9ycy5tYXAoY29sb3IgPT4ge1xuICBjb25zdCBCdXR0b24gPSBzdHlsZWQuYnV0dG9uYFxuICAgIHBhZGRpbmc6IDMycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogaG90cGluaztcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGNvbG9yOiBibGFjaztcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAmOmhvdmVyIHtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB9XG4gIGA7XG5cbiAgcmV0dXJuIEJ1dHRvbjtcbn0pO1xuXG5jb25zdCBiYXNpY1N0eWxlcyA9IGNzc2BcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGNvbG9yOiBjb3JuZmxvd2VyYmx1ZTtcbiAgYm9yZGVyOiAxcHggc29saWQgbGlnaHRncmVlbjtcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICBib3gtc2hhZG93OiA1cHggNXB4IDAgMCBsaWdodGdyZWVuLCAxMHB4IDEwcHggMCAwIGxpZ2h0eWVsbG93O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4xcyBsaW5lYXI7XG4gIG1hcmdpbjogM3JlbSAwO1xuICBwYWRkaW5nOiAxcmVtIDAuNXJlbTtcbmA7XG5jb25zdCBob3ZlclN0eWxlcyA9IGNzc2BcbiAgJjpob3ZlciB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcbiAgICBib3JkZXItY29sb3I6IGFxdWE7XG4gICAgYm94LXNoYWRvdzogLTE1cHggLTE1cHggMCAwIGFxdWEsIC0zMHB4IC0zMHB4IDAgMCBjb3JuZmxvd2VyYmx1ZTtcbiAgfVxuYDtcbmNvbnN0IGJvdW5jZSA9IGtleWZyYW1lc2BcbiAgZnJvbSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAxKTtcbiAgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk5KTtcbiAgfVxuYDtcblxuY29uc3QgQmFzaWMgPSBzdHlsZWQuZGl2YFxuICAke2Jhc2ljU3R5bGVzfTtcbmA7XG5cbmNvbnN0IENvbWJpbmVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG5gO1xuY29uc3QgQW5pbWF0ZWQgPSBzdHlsZWQuZGl2YFxuICAke2Jhc2ljU3R5bGVzfTtcbiAgJHtob3ZlclN0eWxlc307XG4gICYgY29kZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGluZW47XG4gIH1cbiAgYW5pbWF0aW9uOiAke3Byb3BzID0+IHByb3BzLmFuaW1hdGlvbn0gMC4ycyBpbmZpbml0ZSBlYXNlLWluLW91dCBhbHRlcm5hdGU7XG5gO1xuXG5jb25zb2xlLndhcm4oXCJISSBmcm9tIGluZGV4LmpzXCIpO1xuLy8gY29uc29sZS53YXJuKFwiY29sb3JzXCIsIGNvbG9ycyk7XG5cbmNvbnN0IExhbmRpbmcgPSAoeyBkYXRhIH0pID0+IHtcbiAgY29uc29sZS53YXJuKFwiZGF0YVwiLCBkYXRhKTtcbiAgcmV0dXJuIChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICA8R2xvYmFsXG4gICAgICAgIHN0eWxlcz17Y3NzYFxuICAgICAgICAgIGh0bWwsXG4gICAgICAgICAgYm9keSB7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBncmV5O1xuICAgICAgICAgICAgbWluLWhlaWdodDogMTAwJTtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgIH1cbiAgICAgICAgYH1cbiAgICAgIC8+XG4gICAgICA8ZGl2XG4gICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAgPEhlYWQ+XG4gICAgICAgICAgPHRpdGxlPldpdGggRW1vdGlvbjwvdGl0bGU+XG4gICAgICAgIDwvSGVhZD5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDIwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgVGhpcyB3ZWJzaXRlIGlzIG5vdCBhYm91dCB5b3VcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDI3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAxODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBJdCdzIGFib3V0IGV2ZXJ5b25lIGVsc2Ugd2hvJ3MgYmVlbiBoZXJlIGV4Y2VwdCBmb3IgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAzNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMzgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgZWFjaCBib3ggcmVwcmVzZW50cyBhIHBlcnNvbiB3aG8ncyBjb21lIGhlcmUgYW5kIGxlZnQgdGhlaXIgbWFya1xuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNDc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDI4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGV2ZXJ5IHJlbG9hZCBwYWdlIGJyaW5ncyB1cCB0aGUgbW9zdCByZWNlbnQgc2V0IG9mIDEwMCBub3Rlc1xuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiA1NzZweDtcbiAgICAgICAgICAgICAgbGVmdDogNTIwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGl0IHdvdWxkIGJlIHdvbmRlcmZ1bCBpZiB5b3UgPGEgaHJvZj1cIlwiPmNvbnRyaWJ1dGVkIHRvIHRoZSB3YWxsPC9hPntcIiBcIn1cbiAgICAgICAgICAgIGFuZCBjcmVhdGUgc29tZXRoaW5nIHdpdGggdGhlIG90aGVyIHBlb3BsZSB0aGF0IGhhdmUgYmVlbiBoZXJlXG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiA3NDBweDtcbiAgICAgICAgICAgICAgbGVmdDogNjAwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGJ1dCB5b3UnbGwgbmV2ZXIgc2VlIHlvdXIgb3duIGJveCBvbiB0aGUgc2NyZWVuLlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAge2NvbG9ycy5tYXAoKGNvbG9yLCBpbmRleCkgPT4ge1xuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICAgIC8qIG1hcmdpbjogMTBweDsgKi9cbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDUwcHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luOiAycHg7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgIGNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGB9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICk7XG4gICAgICAgIH0pfVxuICAgICAgPC9kaXY+XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKTtcbn07XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTZXJ2ZXJTaWRlUHJvcHMoY29udGV4dCkge1xuICBjb25zdCB7IHJlcSwgcmVzIH0gPSBjb250ZXh0O1xuICAvLyBjb25zb2xlLndhcm4oXCJjb250ZXh0XCIsIGNvbnRleHQpO1xuICAvLyBGZXRjaCBkYXRhIGZyb20gZXh0ZXJuYWwgQVBJXG4gIC8vIGNvbnNvbGUud2FybihcInJlcVwiLCByZXEpO1xuICAvLyBjb25zb2xlLndhcm4oXCJyZXNcIiwgcmVzKTtcbiAgLy8gY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vLi4uL2RhdGFgKTtcbiAgLy8gY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gIGNvbnN0IGRhdGEgPSBcImhpXCI7XG4gIGNvbnNvbGUud2FybihcInNlcnZlcnNpZGUgYm9paWlcIik7XG4gIC8vIFBhc3MgZGF0YSB0byB0aGUgcGFnZSB2aWEgcHJvcHNcbiAgcmV0dXJuIHsgcHJvcHM6IHsgZGF0YSB9IH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IExhbmRpbmc7XG4iXX0= */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  return Button;\n});\nconst basicStyles = false ? {\n  name: \"61j6zk-basicStyles\",\n  styles: \"background-color:white;color:cornflowerblue;border:1px solid lightgreen;border-right:none;border-bottom:none;box-shadow:5px 5px 0 0 lightgreen,10px 10px 0 0 lightyellow;transition:all 0.1s linear;margin:3rem 0;padding:1rem 0.5rem;;label:basicStyles;\"\n} : {\n  name: \"61j6zk-basicStyles\",\n  styles: \"background-color:white;color:cornflowerblue;border:1px solid lightgreen;border-right:none;border-bottom:none;box-shadow:5px 5px 0 0 lightgreen,10px 10px 0 0 lightyellow;transition:all 0.1s linear;margin:3rem 0;padding:1rem 0.5rem;;label:basicStyles;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4QnVCIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuaW1wb3J0IGdlb2xvY2F0aW9uUGFyc2VyIGZyb20gXCIuLi9nZW9sb2NhdGlvblBhcnNlclwiO1xuXG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiSEkgZnJvbSBpbmRleC5qc1wiKTtcbi8vIGNvbnNvbGUud2FybihcImNvbG9yc1wiLCBjb2xvcnMpO1xuXG5jb25zdCBMYW5kaW5nID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnNvbGUud2FybihcImRhdGFcIiwgZGF0YSk7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEdsb2JhbFxuICAgICAgICBzdHlsZXM9e2Nzc2BcbiAgICAgICAgICBodG1sLFxuICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxIZWFkPlxuICAgICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFRoaXMgd2Vic2l0ZSBpcyBub3QgYWJvdXQgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMTgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcmtcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiAxMDAgbm90ZXNcbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNTc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDUyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBpdCB3b3VsZCBiZSB3b25kZXJmdWwgaWYgeW91IDxhIGhyb2Y9XCJcIj5jb250cmlidXRlZCB0byB0aGUgd2FsbDwvYT57XCIgXCJ9XG4gICAgICAgICAgICBhbmQgY3JlYXRlIHNvbWV0aGluZyB3aXRoIHRoZSBvdGhlciBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gaGVyZVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNzQwcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcbiAgLy8gY29uc29sZS53YXJuKFwiY29udGV4dFwiLCBjb250ZXh0KTtcbiAgLy8gRmV0Y2ggZGF0YSBmcm9tIGV4dGVybmFsIEFQSVxuICAvLyBjb25zb2xlLndhcm4oXCJyZXFcIiwgcmVxKTtcbiAgLy8gY29uc29sZS53YXJuKFwicmVzXCIsIHJlcyk7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovLy4uLi9kYXRhYCk7XG4gIC8vIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBkYXRhID0gXCJoaVwiO1xuICBjb25zb2xlLndhcm4oXCJzZXJ2ZXJzaWRlIGJvaWlpXCIpO1xuICAvLyBQYXNzIGRhdGEgdG8gdGhlIHBhZ2UgdmlhIHByb3BzXG4gIHJldHVybiB7IHByb3BzOiB7IGRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nconst hoverStyles = false ? {\n  name: \"1gzpzei-hoverStyles\",\n  styles: \"&:hover{color:white;background-color:lightgray;border-color:aqua;box-shadow:-15px -15px 0 0 aqua,-30px -30px 0 0 cornflowerblue;};label:hoverStyles;\"\n} : {\n  name: \"1gzpzei-hoverStyles\",\n  styles: \"&:hover{color:white;background-color:lightgray;border-color:aqua;box-shadow:-15px -15px 0 0 aqua,-30px -30px 0 0 cornflowerblue;};label:hoverStyles;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Q3VCIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuaW1wb3J0IGdlb2xvY2F0aW9uUGFyc2VyIGZyb20gXCIuLi9nZW9sb2NhdGlvblBhcnNlclwiO1xuXG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiSEkgZnJvbSBpbmRleC5qc1wiKTtcbi8vIGNvbnNvbGUud2FybihcImNvbG9yc1wiLCBjb2xvcnMpO1xuXG5jb25zdCBMYW5kaW5nID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnNvbGUud2FybihcImRhdGFcIiwgZGF0YSk7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEdsb2JhbFxuICAgICAgICBzdHlsZXM9e2Nzc2BcbiAgICAgICAgICBodG1sLFxuICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxIZWFkPlxuICAgICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFRoaXMgd2Vic2l0ZSBpcyBub3QgYWJvdXQgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMTgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcmtcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiAxMDAgbm90ZXNcbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNTc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDUyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBpdCB3b3VsZCBiZSB3b25kZXJmdWwgaWYgeW91IDxhIGhyb2Y9XCJcIj5jb250cmlidXRlZCB0byB0aGUgd2FsbDwvYT57XCIgXCJ9XG4gICAgICAgICAgICBhbmQgY3JlYXRlIHNvbWV0aGluZyB3aXRoIHRoZSBvdGhlciBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gaGVyZVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNzQwcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcbiAgLy8gY29uc29sZS53YXJuKFwiY29udGV4dFwiLCBjb250ZXh0KTtcbiAgLy8gRmV0Y2ggZGF0YSBmcm9tIGV4dGVybmFsIEFQSVxuICAvLyBjb25zb2xlLndhcm4oXCJyZXFcIiwgcmVxKTtcbiAgLy8gY29uc29sZS53YXJuKFwicmVzXCIsIHJlcyk7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovLy4uLi9kYXRhYCk7XG4gIC8vIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBkYXRhID0gXCJoaVwiO1xuICBjb25zb2xlLndhcm4oXCJzZXJ2ZXJzaWRlIGJvaWlpXCIpO1xuICAvLyBQYXNzIGRhdGEgdG8gdGhlIHBhZ2UgdmlhIHByb3BzXG4gIHJldHVybiB7IHByb3BzOiB7IGRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nconst bounce = keyframes`\n  from {\n    transform: scale(1.01);\n  }\n  to {\n    transform: scale(0.99);\n  }\n`;\n\nconst Basic = _styled(\"div\", {\n  target: \"ei2zyl21\",\n  label: \"Basic\"\n})(basicStyles, \";\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwRHdCIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuaW1wb3J0IGdlb2xvY2F0aW9uUGFyc2VyIGZyb20gXCIuLi9nZW9sb2NhdGlvblBhcnNlclwiO1xuXG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiSEkgZnJvbSBpbmRleC5qc1wiKTtcbi8vIGNvbnNvbGUud2FybihcImNvbG9yc1wiLCBjb2xvcnMpO1xuXG5jb25zdCBMYW5kaW5nID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnNvbGUud2FybihcImRhdGFcIiwgZGF0YSk7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEdsb2JhbFxuICAgICAgICBzdHlsZXM9e2Nzc2BcbiAgICAgICAgICBodG1sLFxuICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxIZWFkPlxuICAgICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFRoaXMgd2Vic2l0ZSBpcyBub3QgYWJvdXQgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMTgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcmtcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiAxMDAgbm90ZXNcbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNTc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDUyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBpdCB3b3VsZCBiZSB3b25kZXJmdWwgaWYgeW91IDxhIGhyb2Y9XCJcIj5jb250cmlidXRlZCB0byB0aGUgd2FsbDwvYT57XCIgXCJ9XG4gICAgICAgICAgICBhbmQgY3JlYXRlIHNvbWV0aGluZyB3aXRoIHRoZSBvdGhlciBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gaGVyZVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNzQwcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcbiAgLy8gY29uc29sZS53YXJuKFwiY29udGV4dFwiLCBjb250ZXh0KTtcbiAgLy8gRmV0Y2ggZGF0YSBmcm9tIGV4dGVybmFsIEFQSVxuICAvLyBjb25zb2xlLndhcm4oXCJyZXFcIiwgcmVxKTtcbiAgLy8gY29uc29sZS53YXJuKFwicmVzXCIsIHJlcyk7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovLy4uLi9kYXRhYCk7XG4gIC8vIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBkYXRhID0gXCJoaVwiO1xuICBjb25zb2xlLndhcm4oXCJzZXJ2ZXJzaWRlIGJvaWlpXCIpO1xuICAvLyBQYXNzIGRhdGEgdG8gdGhlIHBhZ2UgdmlhIHByb3BzXG4gIHJldHVybiB7IHByb3BzOiB7IGRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\"));\n\nconst Combined = _styled(\"div\", {\n  target: \"ei2zyl22\",\n  label: \"Combined\"\n})(basicStyles, \";\", hoverStyles, \";& code{background-color:linen;}\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RDJCIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuaW1wb3J0IGdlb2xvY2F0aW9uUGFyc2VyIGZyb20gXCIuLi9nZW9sb2NhdGlvblBhcnNlclwiO1xuXG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiSEkgZnJvbSBpbmRleC5qc1wiKTtcbi8vIGNvbnNvbGUud2FybihcImNvbG9yc1wiLCBjb2xvcnMpO1xuXG5jb25zdCBMYW5kaW5nID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnNvbGUud2FybihcImRhdGFcIiwgZGF0YSk7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEdsb2JhbFxuICAgICAgICBzdHlsZXM9e2Nzc2BcbiAgICAgICAgICBodG1sLFxuICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxIZWFkPlxuICAgICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFRoaXMgd2Vic2l0ZSBpcyBub3QgYWJvdXQgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMTgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcmtcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiAxMDAgbm90ZXNcbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNTc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDUyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBpdCB3b3VsZCBiZSB3b25kZXJmdWwgaWYgeW91IDxhIGhyb2Y9XCJcIj5jb250cmlidXRlZCB0byB0aGUgd2FsbDwvYT57XCIgXCJ9XG4gICAgICAgICAgICBhbmQgY3JlYXRlIHNvbWV0aGluZyB3aXRoIHRoZSBvdGhlciBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gaGVyZVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNzQwcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcbiAgLy8gY29uc29sZS53YXJuKFwiY29udGV4dFwiLCBjb250ZXh0KTtcbiAgLy8gRmV0Y2ggZGF0YSBmcm9tIGV4dGVybmFsIEFQSVxuICAvLyBjb25zb2xlLndhcm4oXCJyZXFcIiwgcmVxKTtcbiAgLy8gY29uc29sZS53YXJuKFwicmVzXCIsIHJlcyk7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovLy4uLi9kYXRhYCk7XG4gIC8vIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBkYXRhID0gXCJoaVwiO1xuICBjb25zb2xlLndhcm4oXCJzZXJ2ZXJzaWRlIGJvaWlpXCIpO1xuICAvLyBQYXNzIGRhdGEgdG8gdGhlIHBhZ2UgdmlhIHByb3BzXG4gIHJldHVybiB7IHByb3BzOiB7IGRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\"));\n\nconst Animated = _styled(\"div\", {\n  target: \"ei2zyl23\",\n  label: \"Animated\"\n})(basicStyles, \";\", hoverStyles, \";& code{background-color:linen;}animation:\", props => props.animation, \" 0.2s infinite ease-in-out alternate;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxRTJCIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuaW1wb3J0IGdlb2xvY2F0aW9uUGFyc2VyIGZyb20gXCIuLi9nZW9sb2NhdGlvblBhcnNlclwiO1xuXG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiSEkgZnJvbSBpbmRleC5qc1wiKTtcbi8vIGNvbnNvbGUud2FybihcImNvbG9yc1wiLCBjb2xvcnMpO1xuXG5jb25zdCBMYW5kaW5nID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnNvbGUud2FybihcImRhdGFcIiwgZGF0YSk7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEdsb2JhbFxuICAgICAgICBzdHlsZXM9e2Nzc2BcbiAgICAgICAgICBodG1sLFxuICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxIZWFkPlxuICAgICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFRoaXMgd2Vic2l0ZSBpcyBub3QgYWJvdXQgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMTgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcmtcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiAxMDAgbm90ZXNcbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNTc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDUyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBpdCB3b3VsZCBiZSB3b25kZXJmdWwgaWYgeW91IDxhIGhyb2Y9XCJcIj5jb250cmlidXRlZCB0byB0aGUgd2FsbDwvYT57XCIgXCJ9XG4gICAgICAgICAgICBhbmQgY3JlYXRlIHNvbWV0aGluZyB3aXRoIHRoZSBvdGhlciBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gaGVyZVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNzQwcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcbiAgLy8gY29uc29sZS53YXJuKFwiY29udGV4dFwiLCBjb250ZXh0KTtcbiAgLy8gRmV0Y2ggZGF0YSBmcm9tIGV4dGVybmFsIEFQSVxuICAvLyBjb25zb2xlLndhcm4oXCJyZXFcIiwgcmVxKTtcbiAgLy8gY29uc29sZS53YXJuKFwicmVzXCIsIHJlcyk7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovLy4uLi9kYXRhYCk7XG4gIC8vIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBkYXRhID0gXCJoaVwiO1xuICBjb25zb2xlLndhcm4oXCJzZXJ2ZXJzaWRlIGJvaWlpXCIpO1xuICAvLyBQYXNzIGRhdGEgdG8gdGhlIHBhZ2UgdmlhIHByb3BzXG4gIHJldHVybiB7IHByb3BzOiB7IGRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\"));\n\nconsole.warn(\"HI from index.js\"); // console.warn(\"colors\", colors);\n\nvar _ref = false ? {\n  name: \"jxh8vp-Landing\",\n  styles: \"html,body{margin:0;background:grey;min-height:100%;font-family:Helvetica,Arial,sans-serif;font-size:24px;};label:Landing;\"\n} : {\n  name: \"jxh8vp-Landing\",\n  styles: \"html,body{margin:0;background:grey;min-height:100%;font-family:Helvetica,Arial,sans-serif;font-size:24px;};label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzRm1CIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuaW1wb3J0IGdlb2xvY2F0aW9uUGFyc2VyIGZyb20gXCIuLi9nZW9sb2NhdGlvblBhcnNlclwiO1xuXG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiSEkgZnJvbSBpbmRleC5qc1wiKTtcbi8vIGNvbnNvbGUud2FybihcImNvbG9yc1wiLCBjb2xvcnMpO1xuXG5jb25zdCBMYW5kaW5nID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnNvbGUud2FybihcImRhdGFcIiwgZGF0YSk7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEdsb2JhbFxuICAgICAgICBzdHlsZXM9e2Nzc2BcbiAgICAgICAgICBodG1sLFxuICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxIZWFkPlxuICAgICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFRoaXMgd2Vic2l0ZSBpcyBub3QgYWJvdXQgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMTgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcmtcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiAxMDAgbm90ZXNcbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNTc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDUyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBpdCB3b3VsZCBiZSB3b25kZXJmdWwgaWYgeW91IDxhIGhyb2Y9XCJcIj5jb250cmlidXRlZCB0byB0aGUgd2FsbDwvYT57XCIgXCJ9XG4gICAgICAgICAgICBhbmQgY3JlYXRlIHNvbWV0aGluZyB3aXRoIHRoZSBvdGhlciBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gaGVyZVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNzQwcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcbiAgLy8gY29uc29sZS53YXJuKFwiY29udGV4dFwiLCBjb250ZXh0KTtcbiAgLy8gRmV0Y2ggZGF0YSBmcm9tIGV4dGVybmFsIEFQSVxuICAvLyBjb25zb2xlLndhcm4oXCJyZXFcIiwgcmVxKTtcbiAgLy8gY29uc29sZS53YXJuKFwicmVzXCIsIHJlcyk7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovLy4uLi9kYXRhYCk7XG4gIC8vIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBkYXRhID0gXCJoaVwiO1xuICBjb25zb2xlLndhcm4oXCJzZXJ2ZXJzaWRlIGJvaWlpXCIpO1xuICAvLyBQYXNzIGRhdGEgdG8gdGhlIHBhZ2UgdmlhIHByb3BzXG4gIHJldHVybiB7IHByb3BzOiB7IGRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref2 = false ? {\n  name: \"gk20ck-Landing\",\n  styles: \"display:flex;height:100%;width:100%;flex-wrap:wrap;;label:Landing;\"\n} : {\n  name: \"gk20ck-Landing\",\n  styles: \"display:flex;height:100%;width:100%;flex-wrap:wrap;;label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrR2dCIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuaW1wb3J0IGdlb2xvY2F0aW9uUGFyc2VyIGZyb20gXCIuLi9nZW9sb2NhdGlvblBhcnNlclwiO1xuXG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiSEkgZnJvbSBpbmRleC5qc1wiKTtcbi8vIGNvbnNvbGUud2FybihcImNvbG9yc1wiLCBjb2xvcnMpO1xuXG5jb25zdCBMYW5kaW5nID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnNvbGUud2FybihcImRhdGFcIiwgZGF0YSk7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEdsb2JhbFxuICAgICAgICBzdHlsZXM9e2Nzc2BcbiAgICAgICAgICBodG1sLFxuICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxIZWFkPlxuICAgICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFRoaXMgd2Vic2l0ZSBpcyBub3QgYWJvdXQgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMTgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcmtcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiAxMDAgbm90ZXNcbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNTc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDUyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBpdCB3b3VsZCBiZSB3b25kZXJmdWwgaWYgeW91IDxhIGhyb2Y9XCJcIj5jb250cmlidXRlZCB0byB0aGUgd2FsbDwvYT57XCIgXCJ9XG4gICAgICAgICAgICBhbmQgY3JlYXRlIHNvbWV0aGluZyB3aXRoIHRoZSBvdGhlciBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gaGVyZVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNzQwcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcbiAgLy8gY29uc29sZS53YXJuKFwiY29udGV4dFwiLCBjb250ZXh0KTtcbiAgLy8gRmV0Y2ggZGF0YSBmcm9tIGV4dGVybmFsIEFQSVxuICAvLyBjb25zb2xlLndhcm4oXCJyZXFcIiwgcmVxKTtcbiAgLy8gY29uc29sZS53YXJuKFwicmVzXCIsIHJlcyk7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovLy4uLi9kYXRhYCk7XG4gIC8vIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBkYXRhID0gXCJoaVwiO1xuICBjb25zb2xlLndhcm4oXCJzZXJ2ZXJzaWRlIGJvaWlpXCIpO1xuICAvLyBQYXNzIGRhdGEgdG8gdGhlIHBhZ2UgdmlhIHByb3BzXG4gIHJldHVybiB7IHByb3BzOiB7IGRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref3 = false ? {\n  name: \"fr23ym-Landing\",\n  styles: \"position:fixed;top:200px;background:white;;label:Landing;\"\n} : {\n  name: \"fr23ym-Landing\",\n  styles: \"position:fixed;top:200px;background:white;;label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4R29CIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuaW1wb3J0IGdlb2xvY2F0aW9uUGFyc2VyIGZyb20gXCIuLi9nZW9sb2NhdGlvblBhcnNlclwiO1xuXG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiSEkgZnJvbSBpbmRleC5qc1wiKTtcbi8vIGNvbnNvbGUud2FybihcImNvbG9yc1wiLCBjb2xvcnMpO1xuXG5jb25zdCBMYW5kaW5nID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnNvbGUud2FybihcImRhdGFcIiwgZGF0YSk7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEdsb2JhbFxuICAgICAgICBzdHlsZXM9e2Nzc2BcbiAgICAgICAgICBodG1sLFxuICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxIZWFkPlxuICAgICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFRoaXMgd2Vic2l0ZSBpcyBub3QgYWJvdXQgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMTgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcmtcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiAxMDAgbm90ZXNcbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNTc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDUyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBpdCB3b3VsZCBiZSB3b25kZXJmdWwgaWYgeW91IDxhIGhyb2Y9XCJcIj5jb250cmlidXRlZCB0byB0aGUgd2FsbDwvYT57XCIgXCJ9XG4gICAgICAgICAgICBhbmQgY3JlYXRlIHNvbWV0aGluZyB3aXRoIHRoZSBvdGhlciBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gaGVyZVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNzQwcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcbiAgLy8gY29uc29sZS53YXJuKFwiY29udGV4dFwiLCBjb250ZXh0KTtcbiAgLy8gRmV0Y2ggZGF0YSBmcm9tIGV4dGVybmFsIEFQSVxuICAvLyBjb25zb2xlLndhcm4oXCJyZXFcIiwgcmVxKTtcbiAgLy8gY29uc29sZS53YXJuKFwicmVzXCIsIHJlcyk7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovLy4uLi9kYXRhYCk7XG4gIC8vIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBkYXRhID0gXCJoaVwiO1xuICBjb25zb2xlLndhcm4oXCJzZXJ2ZXJzaWRlIGJvaWlpXCIpO1xuICAvLyBQYXNzIGRhdGEgdG8gdGhlIHBhZ2UgdmlhIHByb3BzXG4gIHJldHVybiB7IHByb3BzOiB7IGRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref4 = false ? {\n  name: \"m6qkif-Landing\",\n  styles: \"position:fixed;top:276px;left:180px;background:white;width:400px;;label:Landing;\"\n} : {\n  name: \"m6qkif-Landing\",\n  styles: \"position:fixed;top:276px;left:180px;background:white;width:400px;;label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1SG9CIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuaW1wb3J0IGdlb2xvY2F0aW9uUGFyc2VyIGZyb20gXCIuLi9nZW9sb2NhdGlvblBhcnNlclwiO1xuXG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiSEkgZnJvbSBpbmRleC5qc1wiKTtcbi8vIGNvbnNvbGUud2FybihcImNvbG9yc1wiLCBjb2xvcnMpO1xuXG5jb25zdCBMYW5kaW5nID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnNvbGUud2FybihcImRhdGFcIiwgZGF0YSk7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEdsb2JhbFxuICAgICAgICBzdHlsZXM9e2Nzc2BcbiAgICAgICAgICBodG1sLFxuICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxIZWFkPlxuICAgICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFRoaXMgd2Vic2l0ZSBpcyBub3QgYWJvdXQgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMTgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcmtcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiAxMDAgbm90ZXNcbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNTc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDUyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBpdCB3b3VsZCBiZSB3b25kZXJmdWwgaWYgeW91IDxhIGhyb2Y9XCJcIj5jb250cmlidXRlZCB0byB0aGUgd2FsbDwvYT57XCIgXCJ9XG4gICAgICAgICAgICBhbmQgY3JlYXRlIHNvbWV0aGluZyB3aXRoIHRoZSBvdGhlciBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gaGVyZVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNzQwcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcbiAgLy8gY29uc29sZS53YXJuKFwiY29udGV4dFwiLCBjb250ZXh0KTtcbiAgLy8gRmV0Y2ggZGF0YSBmcm9tIGV4dGVybmFsIEFQSVxuICAvLyBjb25zb2xlLndhcm4oXCJyZXFcIiwgcmVxKTtcbiAgLy8gY29uc29sZS53YXJuKFwicmVzXCIsIHJlcyk7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovLy4uLi9kYXRhYCk7XG4gIC8vIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBkYXRhID0gXCJoaVwiO1xuICBjb25zb2xlLndhcm4oXCJzZXJ2ZXJzaWRlIGJvaWlpXCIpO1xuICAvLyBQYXNzIGRhdGEgdG8gdGhlIHBhZ2UgdmlhIHByb3BzXG4gIHJldHVybiB7IHByb3BzOiB7IGRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref5 = false ? {\n  name: \"127nob5-Landing\",\n  styles: \"position:fixed;top:376px;left:380px;background:white;width:400px;;label:Landing;\"\n} : {\n  name: \"127nob5-Landing\",\n  styles: \"position:fixed;top:376px;left:380px;background:white;width:400px;;label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtSW9CIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuaW1wb3J0IGdlb2xvY2F0aW9uUGFyc2VyIGZyb20gXCIuLi9nZW9sb2NhdGlvblBhcnNlclwiO1xuXG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiSEkgZnJvbSBpbmRleC5qc1wiKTtcbi8vIGNvbnNvbGUud2FybihcImNvbG9yc1wiLCBjb2xvcnMpO1xuXG5jb25zdCBMYW5kaW5nID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnNvbGUud2FybihcImRhdGFcIiwgZGF0YSk7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEdsb2JhbFxuICAgICAgICBzdHlsZXM9e2Nzc2BcbiAgICAgICAgICBodG1sLFxuICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxIZWFkPlxuICAgICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFRoaXMgd2Vic2l0ZSBpcyBub3QgYWJvdXQgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMTgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcmtcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiAxMDAgbm90ZXNcbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNTc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDUyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBpdCB3b3VsZCBiZSB3b25kZXJmdWwgaWYgeW91IDxhIGhyb2Y9XCJcIj5jb250cmlidXRlZCB0byB0aGUgd2FsbDwvYT57XCIgXCJ9XG4gICAgICAgICAgICBhbmQgY3JlYXRlIHNvbWV0aGluZyB3aXRoIHRoZSBvdGhlciBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gaGVyZVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNzQwcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcbiAgLy8gY29uc29sZS53YXJuKFwiY29udGV4dFwiLCBjb250ZXh0KTtcbiAgLy8gRmV0Y2ggZGF0YSBmcm9tIGV4dGVybmFsIEFQSVxuICAvLyBjb25zb2xlLndhcm4oXCJyZXFcIiwgcmVxKTtcbiAgLy8gY29uc29sZS53YXJuKFwicmVzXCIsIHJlcyk7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovLy4uLi9kYXRhYCk7XG4gIC8vIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBkYXRhID0gXCJoaVwiO1xuICBjb25zb2xlLndhcm4oXCJzZXJ2ZXJzaWRlIGJvaWlpXCIpO1xuICAvLyBQYXNzIGRhdGEgdG8gdGhlIHBhZ2UgdmlhIHByb3BzXG4gIHJldHVybiB7IHByb3BzOiB7IGRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref6 = false ? {\n  name: \"2crcfo-Landing\",\n  styles: \"position:fixed;top:476px;left:280px;background:white;width:400px;;label:Landing;\"\n} : {\n  name: \"2crcfo-Landing\",\n  styles: \"position:fixed;top:476px;left:280px;background:white;width:400px;;label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErSW9CIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuaW1wb3J0IGdlb2xvY2F0aW9uUGFyc2VyIGZyb20gXCIuLi9nZW9sb2NhdGlvblBhcnNlclwiO1xuXG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiSEkgZnJvbSBpbmRleC5qc1wiKTtcbi8vIGNvbnNvbGUud2FybihcImNvbG9yc1wiLCBjb2xvcnMpO1xuXG5jb25zdCBMYW5kaW5nID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnNvbGUud2FybihcImRhdGFcIiwgZGF0YSk7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEdsb2JhbFxuICAgICAgICBzdHlsZXM9e2Nzc2BcbiAgICAgICAgICBodG1sLFxuICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxIZWFkPlxuICAgICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFRoaXMgd2Vic2l0ZSBpcyBub3QgYWJvdXQgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMTgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcmtcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiAxMDAgbm90ZXNcbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNTc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDUyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBpdCB3b3VsZCBiZSB3b25kZXJmdWwgaWYgeW91IDxhIGhyb2Y9XCJcIj5jb250cmlidXRlZCB0byB0aGUgd2FsbDwvYT57XCIgXCJ9XG4gICAgICAgICAgICBhbmQgY3JlYXRlIHNvbWV0aGluZyB3aXRoIHRoZSBvdGhlciBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gaGVyZVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNzQwcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcbiAgLy8gY29uc29sZS53YXJuKFwiY29udGV4dFwiLCBjb250ZXh0KTtcbiAgLy8gRmV0Y2ggZGF0YSBmcm9tIGV4dGVybmFsIEFQSVxuICAvLyBjb25zb2xlLndhcm4oXCJyZXFcIiwgcmVxKTtcbiAgLy8gY29uc29sZS53YXJuKFwicmVzXCIsIHJlcyk7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovLy4uLi9kYXRhYCk7XG4gIC8vIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBkYXRhID0gXCJoaVwiO1xuICBjb25zb2xlLndhcm4oXCJzZXJ2ZXJzaWRlIGJvaWlpXCIpO1xuICAvLyBQYXNzIGRhdGEgdG8gdGhlIHBhZ2UgdmlhIHByb3BzXG4gIHJldHVybiB7IHByb3BzOiB7IGRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref7 = false ? {\n  name: \"exadey-Landing\",\n  styles: \"position:fixed;top:576px;left:520px;background:white;width:400px;;label:Landing;\"\n} : {\n  name: \"exadey-Landing\",\n  styles: \"position:fixed;top:576px;left:520px;background:white;width:400px;;label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0Sm9CIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuaW1wb3J0IGdlb2xvY2F0aW9uUGFyc2VyIGZyb20gXCIuLi9nZW9sb2NhdGlvblBhcnNlclwiO1xuXG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiSEkgZnJvbSBpbmRleC5qc1wiKTtcbi8vIGNvbnNvbGUud2FybihcImNvbG9yc1wiLCBjb2xvcnMpO1xuXG5jb25zdCBMYW5kaW5nID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnNvbGUud2FybihcImRhdGFcIiwgZGF0YSk7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEdsb2JhbFxuICAgICAgICBzdHlsZXM9e2Nzc2BcbiAgICAgICAgICBodG1sLFxuICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxIZWFkPlxuICAgICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFRoaXMgd2Vic2l0ZSBpcyBub3QgYWJvdXQgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMTgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcmtcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiAxMDAgbm90ZXNcbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNTc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDUyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBpdCB3b3VsZCBiZSB3b25kZXJmdWwgaWYgeW91IDxhIGhyb2Y9XCJcIj5jb250cmlidXRlZCB0byB0aGUgd2FsbDwvYT57XCIgXCJ9XG4gICAgICAgICAgICBhbmQgY3JlYXRlIHNvbWV0aGluZyB3aXRoIHRoZSBvdGhlciBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gaGVyZVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNzQwcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcbiAgLy8gY29uc29sZS53YXJuKFwiY29udGV4dFwiLCBjb250ZXh0KTtcbiAgLy8gRmV0Y2ggZGF0YSBmcm9tIGV4dGVybmFsIEFQSVxuICAvLyBjb25zb2xlLndhcm4oXCJyZXFcIiwgcmVxKTtcbiAgLy8gY29uc29sZS53YXJuKFwicmVzXCIsIHJlcyk7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovLy4uLi9kYXRhYCk7XG4gIC8vIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBkYXRhID0gXCJoaVwiO1xuICBjb25zb2xlLndhcm4oXCJzZXJ2ZXJzaWRlIGJvaWlpXCIpO1xuICAvLyBQYXNzIGRhdGEgdG8gdGhlIHBhZ2UgdmlhIHByb3BzXG4gIHJldHVybiB7IHByb3BzOiB7IGRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref8 = false ? {\n  name: \"abllgw-Landing\",\n  styles: \"position:fixed;top:740px;left:600px;background:white;width:400px;;label:Landing;\"\n} : {\n  name: \"abllgw-Landing\",\n  styles: \"position:fixed;top:740px;left:600px;background:white;width:400px;;label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3S29CIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuaW1wb3J0IGdlb2xvY2F0aW9uUGFyc2VyIGZyb20gXCIuLi9nZW9sb2NhdGlvblBhcnNlclwiO1xuXG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiSEkgZnJvbSBpbmRleC5qc1wiKTtcbi8vIGNvbnNvbGUud2FybihcImNvbG9yc1wiLCBjb2xvcnMpO1xuXG5jb25zdCBMYW5kaW5nID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnNvbGUud2FybihcImRhdGFcIiwgZGF0YSk7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEdsb2JhbFxuICAgICAgICBzdHlsZXM9e2Nzc2BcbiAgICAgICAgICBodG1sLFxuICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxIZWFkPlxuICAgICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFRoaXMgd2Vic2l0ZSBpcyBub3QgYWJvdXQgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMTgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcmtcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiAxMDAgbm90ZXNcbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNTc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDUyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBpdCB3b3VsZCBiZSB3b25kZXJmdWwgaWYgeW91IDxhIGhyb2Y9XCJcIj5jb250cmlidXRlZCB0byB0aGUgd2FsbDwvYT57XCIgXCJ9XG4gICAgICAgICAgICBhbmQgY3JlYXRlIHNvbWV0aGluZyB3aXRoIHRoZSBvdGhlciBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gaGVyZVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNzQwcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcbiAgLy8gY29uc29sZS53YXJuKFwiY29udGV4dFwiLCBjb250ZXh0KTtcbiAgLy8gRmV0Y2ggZGF0YSBmcm9tIGV4dGVybmFsIEFQSVxuICAvLyBjb25zb2xlLndhcm4oXCJyZXFcIiwgcmVxKTtcbiAgLy8gY29uc29sZS53YXJuKFwicmVzXCIsIHJlcyk7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovLy4uLi9kYXRhYCk7XG4gIC8vIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBkYXRhID0gXCJoaVwiO1xuICBjb25zb2xlLndhcm4oXCJzZXJ2ZXJzaWRlIGJvaWlpXCIpO1xuICAvLyBQYXNzIGRhdGEgdG8gdGhlIHBhZ2UgdmlhIHByb3BzXG4gIHJldHVybiB7IHByb3BzOiB7IGRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nconst Landing = ({\n  data\n}) => {\n  console.warn(\"data\", data);\n  return ___EmotionJSX(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, ___EmotionJSX(Global, {\n    styles: _ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), ___EmotionJSX(\"div\", {\n    css: _ref2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, ___EmotionJSX(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, ___EmotionJSX(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"With Emotion\")), ___EmotionJSX(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, ___EmotionJSX(\"div\", {\n    css: _ref3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"This website is not about you\"), ___EmotionJSX(\"div\", {\n    css: _ref4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"It's about everyone else who's been here except for you\"), ___EmotionJSX(\"div\", {\n    css: _ref5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"each box represents a person who's come here and left their mark\"), ___EmotionJSX(\"div\", {\n    css: _ref6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"every reload page brings up the most recent set of 100 notes\"), ___EmotionJSX(\"div\", {\n    css: _ref7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"it would be wonderful if you \", ___EmotionJSX(\"a\", {\n    hrof: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"contributed to the wall\"), \" \", \"and create something with the other people that have been here\"), ___EmotionJSX(\"div\", {\n    css: _ref8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"but you'll never see your own box on the screen.\")), colors.map((color, index) => {\n    return ___EmotionJSX(\"div\", {\n      key: index,\n      css:\n      /*#__PURE__*/\n\n      /*#__PURE__*/\n      css(\"height:50px;width:50px;margin:2px;background-color:\", color, \";font-size:24px;border-radius:4px;&:hover{color:\", color, \";};label:Landing;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1THNCIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuaW1wb3J0IGdlb2xvY2F0aW9uUGFyc2VyIGZyb20gXCIuLi9nZW9sb2NhdGlvblBhcnNlclwiO1xuXG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiSEkgZnJvbSBpbmRleC5qc1wiKTtcbi8vIGNvbnNvbGUud2FybihcImNvbG9yc1wiLCBjb2xvcnMpO1xuXG5jb25zdCBMYW5kaW5nID0gKHsgZGF0YSB9KSA9PiB7XG4gIGNvbnNvbGUud2FybihcImRhdGFcIiwgZGF0YSk7XG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgPEdsb2JhbFxuICAgICAgICBzdHlsZXM9e2Nzc2BcbiAgICAgICAgICBodG1sLFxuICAgICAgICAgIGJvZHkge1xuICAgICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICB9XG4gICAgICAgIGB9XG4gICAgICAvPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxIZWFkPlxuICAgICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgICA8L0hlYWQ+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIFRoaXMgd2Vic2l0ZSBpcyBub3QgYWJvdXQgeW91XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgICAgbGVmdDogMTgwcHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgICBgfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcmtcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiAxMDAgbm90ZXNcbiAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNTc2cHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDUyMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBpdCB3b3VsZCBiZSB3b25kZXJmdWwgaWYgeW91IDxhIGhyb2Y9XCJcIj5jb250cmlidXRlZCB0byB0aGUgd2FsbDwvYT57XCIgXCJ9XG4gICAgICAgICAgICBhbmQgY3JlYXRlIHNvbWV0aGluZyB3aXRoIHRoZSBvdGhlciBwZW9wbGUgdGhhdCBoYXZlIGJlZW4gaGVyZVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICAgIHRvcDogNzQwcHg7XG4gICAgICAgICAgICAgIGxlZnQ6IDYwMHB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgICAgYH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICBjb2xvcjogJHtjb2xvcn07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKGNvbnRleHQpIHtcbiAgY29uc3QgeyByZXEsIHJlcyB9ID0gY29udGV4dDtcbiAgLy8gY29uc29sZS53YXJuKFwiY29udGV4dFwiLCBjb250ZXh0KTtcbiAgLy8gRmV0Y2ggZGF0YSBmcm9tIGV4dGVybmFsIEFQSVxuICAvLyBjb25zb2xlLndhcm4oXCJyZXFcIiwgcmVxKTtcbiAgLy8gY29uc29sZS53YXJuKFwicmVzXCIsIHJlcyk7XG4gIC8vIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovLy4uLi9kYXRhYCk7XG4gIC8vIGNvbnN0IGRhdGEgPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBkYXRhID0gXCJoaVwiO1xuICBjb25zb2xlLndhcm4oXCJzZXJ2ZXJzaWRlIGJvaWlpXCIpO1xuICAvLyBQYXNzIGRhdGEgdG8gdGhlIHBhZ2UgdmlhIHByb3BzXG4gIHJldHVybiB7IHByb3BzOiB7IGRhdGEgfSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\"), \";label:Landing;\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    });\n  })));\n};\n\nexport async function getServerSideProps(context) {\n  const {\n    req,\n    res\n  } = context; // console.warn(\"context\", context);\n  // Fetch data from external API\n  // console.warn(\"req\", req);\n  // console.warn(\"res\", res);\n  // const res = await fetch(`https://.../data`);\n  // const data = await res.json();\n\n  const data = \"hi\";\n  console.warn(\"serverside boiii\"); // Pass data to the page via props\n\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default Landing;","map":{"version":3,"sources":["/Users/ygoldobin/yanton/thiswebsiteisnotaboutyou/pages/index.js"],"names":["React","Head","chroma","css","jsx","Global","keyframes","Nav","geolocationParser","colors","scale","mode","buttons","map","color","Button","basicStyles","hoverStyles","bounce","Basic","Combined","Animated","props","animation","console","warn","Landing","data","index","getServerSideProps","context","req","res"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,eAA5C;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;;AAEA,MAAMC,MAAM,GAAGP,MAAM,CAClBQ,KADY,CACN,CAAC,SAAD,EAAY,SAAZ,CADM,EAEZC,IAFY,CAEP,KAFO,EAGZF,MAHY,CAGL,GAHK,CAAf;AAKA,MAAMG,OAAO,GAAGH,MAAM,CAACI,GAAP,CAAWC,KAAK,IAAI;AAClC,QAAMC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ;;AAYA,SAAOA,MAAP;AACD,CAde,CAAhB;AAgBA,MAAMC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAWA,MAAMC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAQA,MAAMC,MAAM,GAAGZ,SAAU;;;;;;;CAAzB;;AASA,MAAMa,KAAK;AAAA;AAAA;AAAA,GACPH,WADO,iyOAAX;;AAIA,MAAMI,QAAQ;AAAA;AAAA;AAAA,GACVJ,WADU,OAEVC,WAFU,g0OAAd;;AAOA,MAAMI,QAAQ;AAAA;AAAA;AAAA,GACVL,WADU,OAEVC,WAFU,gDAMCK,KAAK,IAAIA,KAAK,CAACC,SANhB,q0OAAd;;AASAC,OAAO,CAACC,IAAR,CAAa,kBAAb,E,CACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5BH,EAAAA,OAAO,CAACC,IAAR,CAAa,MAAb,EAAqBE,IAArB;AACA,SACE,cAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,MAAD;AACE,IAAA,MAAM,MADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaE;AACE,IAAA,GAAG,OADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,cAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CARF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,OADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAUE;AACE,IAAA,GAAG,OADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAVF,EAsBE;AACE,IAAA,GAAG,OADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAtBF,EAkCE;AACE,IAAA,GAAG,OADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAlCF,EA+CE;AACE,IAAA,GAAG,OADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAS+B;AAAG,IAAA,IAAI,EAAC,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAT/B,EASsE,GATtE,mEA/CF,EA2DE;AACE,IAAA,GAAG,OADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDA3DF,CAXF,EAkFGlB,MAAM,CAACI,GAAP,CAAW,CAACC,KAAD,EAAQc,KAAR,KAAkB;AAC5B,WACE;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,GAAG;AAAA;;AAAA;AAAEzB,MAAAA,GAAF,wDAKmBW,KALnB,sDASUA,KATV,o0OAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAiBD,GAlBA,CAlFH,CAbF,CADF;AAsHD,CAxHD;;AA0HA,OAAO,eAAee,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAeF,OAArB,CADgD,CAEhD;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMH,IAAI,GAAG,IAAb;AACAH,EAAAA,OAAO,CAACC,IAAR,CAAa,kBAAb,EATgD,CAUhD;;AACA,SAAO;AAAEH,IAAAA,KAAK,EAAE;AAAEK,MAAAA;AAAF;AAAT,GAAP;AACD;AAED,eAAeD,OAAf","sourcesContent":["import React from \"react\";\nimport Head from \"next/head\";\nimport chroma from \"chroma-js\";\nimport styled from \"@emotion/styled\";\nimport { css, jsx, Global, keyframes } from \"@emotion/core\";\n\nimport Nav from \"../components/nav\";\nimport geolocationParser from \"../geolocationParser\";\n\nconst colors = chroma\n  .scale([\"#fafa6e\", \"#2A4858\"])\n  .mode(\"lch\")\n  .colors(600);\n\nconst buttons = colors.map(color => {\n  const Button = styled.button`\n    padding: 32px;\n    background-color: hotpink;\n    font-size: 24px;\n    border-radius: 4px;\n    color: black;\n    font-weight: bold;\n    &:hover {\n      color: white;\n    }\n  `;\n\n  return Button;\n});\n\nconst basicStyles = css`\n  background-color: white;\n  color: cornflowerblue;\n  border: 1px solid lightgreen;\n  border-right: none;\n  border-bottom: none;\n  box-shadow: 5px 5px 0 0 lightgreen, 10px 10px 0 0 lightyellow;\n  transition: all 0.1s linear;\n  margin: 3rem 0;\n  padding: 1rem 0.5rem;\n`;\nconst hoverStyles = css`\n  &:hover {\n    color: white;\n    background-color: lightgray;\n    border-color: aqua;\n    box-shadow: -15px -15px 0 0 aqua, -30px -30px 0 0 cornflowerblue;\n  }\n`;\nconst bounce = keyframes`\n  from {\n    transform: scale(1.01);\n  }\n  to {\n    transform: scale(0.99);\n  }\n`;\n\nconst Basic = styled.div`\n  ${basicStyles};\n`;\n\nconst Combined = styled.div`\n  ${basicStyles};\n  ${hoverStyles};\n  & code {\n    background-color: linen;\n  }\n`;\nconst Animated = styled.div`\n  ${basicStyles};\n  ${hoverStyles};\n  & code {\n    background-color: linen;\n  }\n  animation: ${props => props.animation} 0.2s infinite ease-in-out alternate;\n`;\n\nconsole.warn(\"HI from index.js\");\n// console.warn(\"colors\", colors);\n\nconst Landing = ({ data }) => {\n  console.warn(\"data\", data);\n  return (\n    <React.Fragment>\n      <Global\n        styles={css`\n          html,\n          body {\n            margin: 0;\n            background: grey;\n            min-height: 100%;\n            font-family: Helvetica, Arial, sans-serif;\n            font-size: 24px;\n          }\n        `}\n      />\n      <div\n        css={css`\n          display: flex;\n          height: 100%;\n          width: 100%;\n          flex-wrap: wrap;\n        `}\n      >\n        <Head>\n          <title>With Emotion</title>\n        </Head>\n        <div>\n          <div\n            css={css`\n              position: fixed;\n              top: 200px;\n              background: white;\n            `}\n          >\n            This website is not about you\n          </div>\n          <div\n            css={css`\n              position: fixed;\n              top: 276px;\n              left: 180px;\n              background: white;\n\n              width: 400px;\n            `}\n          >\n            It's about everyone else who's been here except for you\n          </div>\n          <div\n            css={css`\n              position: fixed;\n              top: 376px;\n              left: 380px;\n              background: white;\n\n              width: 400px;\n            `}\n          >\n            each box represents a person who's come here and left their mark\n          </div>\n          <div\n            css={css`\n              position: fixed;\n              top: 476px;\n              left: 280px;\n              background: white;\n\n              width: 400px;\n            `}\n          >\n            every reload page brings up the most recent set of 100 notes\n          </div>\n\n          <div\n            css={css`\n              position: fixed;\n              top: 576px;\n              left: 520px;\n              background: white;\n              width: 400px;\n            `}\n          >\n            it would be wonderful if you <a hrof=\"\">contributed to the wall</a>{\" \"}\n            and create something with the other people that have been here\n          </div>\n          <div\n            css={css`\n              position: fixed;\n              top: 740px;\n              left: 600px;\n              background: white;\n              width: 400px;\n            `}\n          >\n            but you'll never see your own box on the screen.\n          </div>\n        </div>\n        {colors.map((color, index) => {\n          return (\n            <div\n              key={index}\n              css={css`\n                /* margin: 10px; */\n                height: 50px;\n                width: 50px;\n                margin: 2px;\n                background-color: ${color};\n                font-size: 24px;\n                border-radius: 4px;\n                &:hover {\n                  color: ${color};\n                }\n              `}\n            />\n          );\n        })}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport async function getServerSideProps(context) {\n  const { req, res } = context;\n  // console.warn(\"context\", context);\n  // Fetch data from external API\n  // console.warn(\"req\", req);\n  // console.warn(\"res\", res);\n  // const res = await fetch(`https://.../data`);\n  // const data = await res.json();\n  const data = \"hi\";\n  console.warn(\"serverside boiii\");\n  // Pass data to the page via props\n  return { props: { data } };\n}\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}