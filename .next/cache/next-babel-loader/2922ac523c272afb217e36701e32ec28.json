{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _styled from \"@emotion/styled-base\";\nvar _jsxFileName = \"/Users/ygoldobin/yanton/thiswebsiteisnotaboutyou/pages/index.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  from {\\n    transform: scale(1.01);\\n  }\\n  to {\\n    transform: scale(0.99);\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React from \"react\";\nimport Head from \"next/head\";\nimport chroma from \"chroma-js\";\nimport { css, jsx, Global, keyframes } from \"@emotion/core\";\nimport Nav from \"../components/nav\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nvar datum = _Array$from(true).fill(10);\n\nvar colors = chroma.scale([\"#fafa6e\", \"#2A4858\"]).mode(\"lch\").colors(600);\nvar buttons = colors.map(function (color) {\n  var Button = _styled(\"button\", {\n    target: \"ei2zyl20\",\n    label: \"Button\"\n  })(false ? {\n    name: \"txevan\",\n    styles: \"padding:32px;background-color:hotpink;font-size:24px;border-radius:4px;color:black;font-weight:bold;&:hover{color:white;}\"\n  } : {\n    name: \"txevan\",\n    styles: \"padding:32px;background-color:hotpink;font-size:24px;border-radius:4px;color:black;font-weight:bold;&:hover{color:white;}\",\n    map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFlOEIiLCJmaWxlIjoiL1VzZXJzL3lnb2xkb2Jpbi95YW50b24vdGhpc3dlYnNpdGVpc25vdGFib3V0eW91L3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IEhlYWQgZnJvbSBcIm5leHQvaGVhZFwiO1xuaW1wb3J0IGNocm9tYSBmcm9tIFwiY2hyb21hLWpzXCI7XG5pbXBvcnQgc3R5bGVkIGZyb20gXCJAZW1vdGlvbi9zdHlsZWRcIjtcbmltcG9ydCB7IGNzcywganN4LCBHbG9iYWwsIGtleWZyYW1lcyB9IGZyb20gXCJAZW1vdGlvbi9jb3JlXCI7XG5cbmltcG9ydCBOYXYgZnJvbSBcIi4uL2NvbXBvbmVudHMvbmF2XCI7XG5cbmNvbnN0IGRhdHVtID0gQXJyYXkuZnJvbSh0cnVlKS5maWxsKDEwKTtcbmNvbnN0IGNvbG9ycyA9IGNocm9tYVxuICAuc2NhbGUoW1wiI2ZhZmE2ZVwiLCBcIiMyQTQ4NThcIl0pXG4gIC5tb2RlKFwibGNoXCIpXG4gIC5jb2xvcnMoNjAwKTtcblxuY29uc3QgYnV0dG9ucyA9IGNvbG9ycy5tYXAoY29sb3IgPT4ge1xuICBjb25zdCBCdXR0b24gPSBzdHlsZWQuYnV0dG9uYFxuICAgIHBhZGRpbmc6IDMycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogaG90cGluaztcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGNvbG9yOiBibGFjaztcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAmOmhvdmVyIHtcbiAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB9XG4gIGA7XG5cbiAgcmV0dXJuIEJ1dHRvbjtcbn0pO1xuXG5jb25zdCBiYXNpY1N0eWxlcyA9IGNzc2BcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGNvbG9yOiBjb3JuZmxvd2VyYmx1ZTtcbiAgYm9yZGVyOiAxcHggc29saWQgbGlnaHRncmVlbjtcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICBib3gtc2hhZG93OiA1cHggNXB4IDAgMCBsaWdodGdyZWVuLCAxMHB4IDEwcHggMCAwIGxpZ2h0eWVsbG93O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4xcyBsaW5lYXI7XG4gIG1hcmdpbjogM3JlbSAwO1xuICBwYWRkaW5nOiAxcmVtIDAuNXJlbTtcbmA7XG5jb25zdCBob3ZlclN0eWxlcyA9IGNzc2BcbiAgJjpob3ZlciB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcbiAgICBib3JkZXItY29sb3I6IGFxdWE7XG4gICAgYm94LXNoYWRvdzogLTE1cHggLTE1cHggMCAwIGFxdWEsIC0zMHB4IC0zMHB4IDAgMCBjb3JuZmxvd2VyYmx1ZTtcbiAgfVxuYDtcbmNvbnN0IGJvdW5jZSA9IGtleWZyYW1lc2BcbiAgZnJvbSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAxKTtcbiAgfVxuICB0byB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjk5KTtcbiAgfVxuYDtcblxuY29uc3QgQmFzaWMgPSBzdHlsZWQuZGl2YFxuICAke2Jhc2ljU3R5bGVzfTtcbmA7XG5cbmNvbnN0IENvbWJpbmVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG5gO1xuY29uc3QgQW5pbWF0ZWQgPSBzdHlsZWQuZGl2YFxuICAke2Jhc2ljU3R5bGVzfTtcbiAgJHtob3ZlclN0eWxlc307XG4gICYgY29kZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGluZW47XG4gIH1cbiAgYW5pbWF0aW9uOiAke3Byb3BzID0+IHByb3BzLmFuaW1hdGlvbn0gMC4ycyBpbmZpbml0ZSBlYXNlLWluLW91dCBhbHRlcm5hdGU7XG5gO1xuXG5jb25zb2xlLndhcm4oXCJjb2xvcnNcIiwgY29sb3JzKTtcblxuY29uc29sZS53YXJuKFwiZGF0dW1cIiwgZGF0dW0pO1xuXG5jb25zdCBMYW5kaW5nID0gKCkgPT4gKFxuICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgPEdsb2JhbFxuICAgICAgc3R5bGVzPXtjc3NgXG4gICAgICAgIGh0bWwsXG4gICAgICAgIGJvZHkge1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiBncmV5O1xuICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgZm9udC1mYW1pbHk6IEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICB9XG4gICAgICBgfVxuICAgIC8+XG4gICAgPGRpdlxuICAgICAgY3NzPXtjc3NgXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgIGB9XG4gICAgPlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT5XaXRoIEVtb3Rpb248L3RpdGxlPlxuICAgICAgPC9IZWFkPlxuICAgICAgPGRpdj5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgdG9wOiAyMDBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgIGB9XG4gICAgICAgID5cbiAgICAgICAgICBUaGlzIHdlYnNpdGUgaXMgbm90IGFib3V0IHlvdVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgdG9wOiAyNzZweDtcbiAgICAgICAgICAgIGxlZnQ6IDE4MHB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICBgfVxuICAgICAgICA+XG4gICAgICAgICAgSXQncyBhYm91dCBldmVyeW9uZSBlbHNlIHdobydzIGJlZW4gaGVyZSBleGNlcHQgZm9yIHlvdVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgdG9wOiAzNzZweDtcbiAgICAgICAgICAgIGxlZnQ6IDM4MHB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG5cbiAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICBgfVxuICAgICAgICA+XG4gICAgICAgICAgZWFjaCBib3ggcmVwcmVzZW50cyBhIHBlcnNvbiB3aG8ncyBjb21lIGhlcmUgYW5kIGxlZnQgdGhlaXIgbWFyazogYVxuICAgICAgICAgIGNvbG9yIGFuZCBhIG5vdGVcbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgIHRvcDogNDc2cHg7XG4gICAgICAgICAgICBsZWZ0OiAyODBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIGV2ZXJ5IHJlbG9hZCBwYWdlIGJyaW5ncyB1cCB0aGUgbW9zdCByZWNlbnQgc2V0IG9mIG1hbnkgc3VibWlzc2lvbnMgYXNcbiAgICAgICAgICB3aWxsIGZpdCBvbiB5b3VyIHNjcmVlblxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICB0b3A6IDU3NnB4O1xuICAgICAgICAgICAgbGVmdDogNDgwcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgICAgICBgfVxuICAgICAgICA+XG4gICAgICAgICAgaXQgd291bGQgYmUgd29uZGVyZnVsIGlmIHlvdSA8YSBocm9mPVwiXCI+Y29udHJpYnV0ZWQgdG8gdGhlIHdhbGw8L2E+LFxuICAgICAgICAgIGJ1dCB5b3UnbGwgbmV2ZXIgc2VlIHlvdXIgb3duIGJveCBvbiB0aGUgc2NyZWVuLlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAge2NvbG9ycy5tYXAoKGNvbG9yLCBpbmRleCkgPT4ge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJoaVwiKTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICAgIC8qIG1hcmdpbjogMTBweDsgKi9cbiAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICB3aWR0aDogNTBweDtcbiAgICAgICAgICAgICAgbWFyZ2luOiAycHg7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICR7Y29sb3J9O1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgfVxuICAgICAgICAgIC8+XG4gICAgICAgICk7XG4gICAgICB9KX1cbiAgICA8L2Rpdj5cbiAgPC9SZWFjdC5GcmFnbWVudD5cbik7XG5cbmNvbnN0IEhvbWUgPSAoKSA9PiAoXG4gIDxkaXY+XG4gICAgPEhlYWQ+XG4gICAgICA8dGl0bGU+SG9tZTwvdGl0bGU+XG4gICAgICA8bGluayByZWw9XCJpY29uXCIgaHJlZj1cIi9mYXZpY29uLmljb1wiIC8+XG4gICAgPC9IZWFkPlxuXG4gICAgPE5hdiAvPlxuXG4gICAgPGRpdiBjbGFzc05hbWU9XCJoZXJvXCI+XG4gICAgICA8aDEgY2xhc3NOYW1lPVwidGl0bGVcIj5XZWxjb21lIHRvIE5leHQuanMhPC9oMT5cbiAgICAgIDxwIGNsYXNzTmFtZT1cImRlc2NyaXB0aW9uXCI+XG4gICAgICAgIFRvIGdldCBzdGFydGVkLCBlZGl0IDxjb2RlPnBhZ2VzL2luZGV4LmpzPC9jb2RlPiBhbmQgc2F2ZSB0byByZWxvYWQuXG4gICAgICA8L3A+XG5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCI+XG4gICAgICAgIDxhIGhyZWY9XCJodHRwczovL25leHRqcy5vcmcvZG9jc1wiIGNsYXNzTmFtZT1cImNhcmRcIj5cbiAgICAgICAgICA8aDM+RG9jdW1lbnRhdGlvbiAmcmFycjs8L2gzPlxuICAgICAgICAgIDxwPkxlYXJuIG1vcmUgYWJvdXQgTmV4dC5qcyBpbiB0aGUgZG9jdW1lbnRhdGlvbi48L3A+XG4gICAgICAgIDwvYT5cbiAgICAgICAgPGEgaHJlZj1cImh0dHBzOi8vbmV4dGpzLm9yZy9sZWFyblwiIGNsYXNzTmFtZT1cImNhcmRcIj5cbiAgICAgICAgICA8aDM+TmV4dC5qcyBMZWFybiAmcmFycjs8L2gzPlxuICAgICAgICAgIDxwPkxlYXJuIGFib3V0IE5leHQuanMgYnkgZm9sbG93aW5nIGFuIGludGVyYWN0aXZlIHR1dG9yaWFsITwvcD5cbiAgICAgICAgPC9hPlxuICAgICAgICA8YVxuICAgICAgICAgIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vemVpdC9uZXh0LmpzL3RyZWUvbWFzdGVyL2V4YW1wbGVzXCJcbiAgICAgICAgICBjbGFzc05hbWU9XCJjYXJkXCJcbiAgICAgICAgPlxuICAgICAgICAgIDxoMz5FeGFtcGxlcyAmcmFycjs8L2gzPlxuICAgICAgICAgIDxwPkZpbmQgb3RoZXIgZXhhbXBsZSBib2lsZXJwbGF0ZXMgb24gdGhlIE5leHQuanMgR2l0SHViLjwvcD5cbiAgICAgICAgPC9hPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG5cbiAgICA8c3R5bGUganN4PntgXG4gICAgICAuaGVybyB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBjb2xvcjogIzMzMztcbiAgICAgIH1cbiAgICAgIC50aXRsZSB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHBhZGRpbmctdG9wOiA4MHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMS4xNTtcbiAgICAgICAgZm9udC1zaXplOiA0OHB4O1xuICAgICAgfVxuICAgICAgLnRpdGxlLFxuICAgICAgLmRlc2NyaXB0aW9uIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgfVxuICAgICAgLnJvdyB7XG4gICAgICAgIG1heC13aWR0aDogODgwcHg7XG4gICAgICAgIG1hcmdpbjogODBweCBhdXRvIDQwcHg7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgICAgfVxuICAgICAgLmNhcmQge1xuICAgICAgICBwYWRkaW5nOiAxOHB4IDE4cHggMjRweDtcbiAgICAgICAgd2lkdGg6IDIyMHB4O1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGNvbG9yOiAjNDM0MzQzO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjOWI5YjliO1xuICAgICAgfVxuICAgICAgLmNhcmQ6aG92ZXIge1xuICAgICAgICBib3JkZXItY29sb3I6ICMwNjdkZjc7XG4gICAgICB9XG4gICAgICAuY2FyZCBoMyB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgY29sb3I6ICMwNjdkZjc7XG4gICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgIH1cbiAgICAgIC5jYXJkIHAge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDEycHggMCAwO1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgPC9kaXY+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBMYW5kaW5nO1xuIl19 */\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  });\n\n  return Button;\n});\nvar basicStyles = false ? {\n  name: \"61j6zk-basicStyles\",\n  styles: \"background-color:white;color:cornflowerblue;border:1px solid lightgreen;border-right:none;border-bottom:none;box-shadow:5px 5px 0 0 lightgreen,10px 10px 0 0 lightyellow;transition:all 0.1s linear;margin:3rem 0;padding:1rem 0.5rem;;label:basicStyles;\"\n} : {\n  name: \"61j6zk-basicStyles\",\n  styles: \"background-color:white;color:cornflowerblue;border:1px solid lightgreen;border-right:none;border-bottom:none;box-shadow:5px 5px 0 0 lightgreen,10px 10px 0 0 lightyellow;transition:all 0.1s linear;margin:3rem 0;padding:1rem 0.5rem;;label:basicStyles;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4QnVCIiwiZmlsZSI6Ii9Vc2Vycy95Z29sZG9iaW4veWFudG9uL3RoaXN3ZWJzaXRlaXNub3RhYm91dHlvdS9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBIZWFkIGZyb20gXCJuZXh0L2hlYWRcIjtcbmltcG9ydCBjaHJvbWEgZnJvbSBcImNocm9tYS1qc1wiO1xuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkXCI7XG5pbXBvcnQgeyBjc3MsIGpzeCwgR2xvYmFsLCBrZXlmcmFtZXMgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiO1xuXG5pbXBvcnQgTmF2IGZyb20gXCIuLi9jb21wb25lbnRzL25hdlwiO1xuXG5jb25zdCBkYXR1bSA9IEFycmF5LmZyb20odHJ1ZSkuZmlsbCgxMCk7XG5jb25zdCBjb2xvcnMgPSBjaHJvbWFcbiAgLnNjYWxlKFtcIiNmYWZhNmVcIiwgXCIjMkE0ODU4XCJdKVxuICAubW9kZShcImxjaFwiKVxuICAuY29sb3JzKDYwMCk7XG5cbmNvbnN0IGJ1dHRvbnMgPSBjb2xvcnMubWFwKGNvbG9yID0+IHtcbiAgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbmBcbiAgICBwYWRkaW5nOiAzMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGhvdHBpbms7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogYmxhY2s7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICBgO1xuXG4gIHJldHVybiBCdXR0b247XG59KTtcblxuY29uc3QgYmFzaWNTdHlsZXMgPSBjc3NgXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JlZW47XG4gIGJvcmRlci1yaWdodDogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgYm94LXNoYWRvdzogNXB4IDVweCAwIDAgbGlnaHRncmVlbiwgMTBweCAxMHB4IDAgMCBsaWdodHllbGxvdztcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgbGluZWFyO1xuICBtYXJnaW46IDNyZW0gMDtcbiAgcGFkZGluZzogMXJlbSAwLjVyZW07XG5gO1xuY29uc3QgaG92ZXJTdHlsZXMgPSBjc3NgXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgYm9yZGVyLWNvbG9yOiBhcXVhO1xuICAgIGJveC1zaGFkb3c6IC0xNXB4IC0xNXB4IDAgMCBhcXVhLCAtMzBweCAtMzBweCAwIDAgY29ybmZsb3dlcmJsdWU7XG4gIH1cbmA7XG5jb25zdCBib3VuY2UgPSBrZXlmcmFtZXNgXG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMSk7XG4gIH1cbiAgdG8ge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMC45OSk7XG4gIH1cbmA7XG5cbmNvbnN0IEJhc2ljID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG5gO1xuXG5jb25zdCBDb21iaW5lZCA9IHN0eWxlZC5kaXZgXG4gICR7YmFzaWNTdHlsZXN9O1xuICAke2hvdmVyU3R5bGVzfTtcbiAgJiBjb2RlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaW5lbjtcbiAgfVxuYDtcbmNvbnN0IEFuaW1hdGVkID0gc3R5bGVkLmRpdmBcbiAgJHtiYXNpY1N0eWxlc307XG4gICR7aG92ZXJTdHlsZXN9O1xuICAmIGNvZGUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpbmVuO1xuICB9XG4gIGFuaW1hdGlvbjogJHtwcm9wcyA9PiBwcm9wcy5hbmltYXRpb259IDAuMnMgaW5maW5pdGUgZWFzZS1pbi1vdXQgYWx0ZXJuYXRlO1xuYDtcblxuY29uc29sZS53YXJuKFwiY29sb3JzXCIsIGNvbG9ycyk7XG5cbmNvbnNvbGUud2FybihcImRhdHVtXCIsIGRhdHVtKTtcblxuY29uc3QgTGFuZGluZyA9ICgpID0+IChcbiAgPFJlYWN0LkZyYWdtZW50PlxuICAgIDxHbG9iYWxcbiAgICAgIHN0eWxlcz17Y3NzYFxuICAgICAgICBodG1sLFxuICAgICAgICBib2R5IHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgYmFja2dyb3VuZDogZ3JleTtcbiAgICAgICAgICBtaW4taGVpZ2h0OiAxMDAlO1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgfVxuICAgICAgYH1cbiAgICAvPlxuICAgIDxkaXZcbiAgICAgIGNzcz17Y3NzYFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8dGl0bGU+V2l0aCBFbW90aW9uPC90aXRsZT5cbiAgICAgIDwvSGVhZD5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgIHRvcDogMjAwcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICBgfVxuICAgICAgICA+XG4gICAgICAgICAgVGhpcyB3ZWJzaXRlIGlzIG5vdCBhYm91dCB5b3VcbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgIHRvcDogMjc2cHg7XG4gICAgICAgICAgICBsZWZ0OiAxODBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIEl0J3MgYWJvdXQgZXZlcnlvbmUgZWxzZSB3aG8ncyBiZWVuIGhlcmUgZXhjZXB0IGZvciB5b3VcbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICAgIHRvcDogMzc2cHg7XG4gICAgICAgICAgICBsZWZ0OiAzODBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuXG4gICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIGVhY2ggYm94IHJlcHJlc2VudHMgYSBwZXJzb24gd2hvJ3MgY29tZSBoZXJlIGFuZCBsZWZ0IHRoZWlyIG1hcms6IGFcbiAgICAgICAgICBjb2xvciBhbmQgYSBub3RlXG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgICAgICAgICB0b3A6IDQ3NnB4O1xuICAgICAgICAgICAgbGVmdDogMjgwcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcblxuICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgICAgIGB9XG4gICAgICAgID5cbiAgICAgICAgICBldmVyeSByZWxvYWQgcGFnZSBicmluZ3MgdXAgdGhlIG1vc3QgcmVjZW50IHNldCBvZiBtYW55IHN1Ym1pc3Npb25zIGFzXG4gICAgICAgICAgd2lsbCBmaXQgb24geW91ciBzY3JlZW5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgICAgdG9wOiA1NzZweDtcbiAgICAgICAgICAgIGxlZnQ6IDQ4MHB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICB3aWR0aDogNDAwcHg7XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIGl0IHdvdWxkIGJlIHdvbmRlcmZ1bCBpZiB5b3UgPGEgaHJvZj1cIlwiPmNvbnRyaWJ1dGVkIHRvIHRoZSB3YWxsPC9hPixcbiAgICAgICAgICBidXQgeW91J2xsIG5ldmVyIHNlZSB5b3VyIG93biBib3ggb24gdGhlIHNjcmVlbi5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIHtjb2xvcnMubWFwKChjb2xvciwgaW5kZXgpID0+IHtcbiAgICAgICAgY29uc29sZS53YXJuKFwiaGlcIik7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPGRpdlxuICAgICAgICAgICAga2V5PXtpbmRleH1cbiAgICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgICAvKiBtYXJnaW46IDEwcHg7ICovXG4gICAgICAgICAgICAgIGhlaWdodDogNTBweDtcbiAgICAgICAgICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICAgICAgICAgIG1hcmdpbjogMnB4O1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAke2NvbG9yfTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH1cbiAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgICAgfSl9XG4gICAgPC9kaXY+XG4gIDwvUmVhY3QuRnJhZ21lbnQ+XG4pO1xuXG5jb25zdCBIb21lID0gKCkgPT4gKFxuICA8ZGl2PlxuICAgIDxIZWFkPlxuICAgICAgPHRpdGxlPkhvbWU8L3RpdGxlPlxuICAgICAgPGxpbmsgcmVsPVwiaWNvblwiIGhyZWY9XCIvZmF2aWNvbi5pY29cIiAvPlxuICAgIDwvSGVhZD5cblxuICAgIDxOYXYgLz5cblxuICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVyb1wiPlxuICAgICAgPGgxIGNsYXNzTmFtZT1cInRpdGxlXCI+V2VsY29tZSB0byBOZXh0LmpzITwvaDE+XG4gICAgICA8cCBjbGFzc05hbWU9XCJkZXNjcmlwdGlvblwiPlxuICAgICAgICBUbyBnZXQgc3RhcnRlZCwgZWRpdCA8Y29kZT5wYWdlcy9pbmRleC5qczwvY29kZT4gYW5kIHNhdmUgdG8gcmVsb2FkLlxuICAgICAgPC9wPlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9uZXh0anMub3JnL2RvY3NcIiBjbGFzc05hbWU9XCJjYXJkXCI+XG4gICAgICAgICAgPGgzPkRvY3VtZW50YXRpb24gJnJhcnI7PC9oMz5cbiAgICAgICAgICA8cD5MZWFybiBtb3JlIGFib3V0IE5leHQuanMgaW4gdGhlIGRvY3VtZW50YXRpb24uPC9wPlxuICAgICAgICA8L2E+XG4gICAgICAgIDxhIGhyZWY9XCJodHRwczovL25leHRqcy5vcmcvbGVhcm5cIiBjbGFzc05hbWU9XCJjYXJkXCI+XG4gICAgICAgICAgPGgzPk5leHQuanMgTGVhcm4gJnJhcnI7PC9oMz5cbiAgICAgICAgICA8cD5MZWFybiBhYm91dCBOZXh0LmpzIGJ5IGZvbGxvd2luZyBhbiBpbnRlcmFjdGl2ZSB0dXRvcmlhbCE8L3A+XG4gICAgICAgIDwvYT5cbiAgICAgICAgPGFcbiAgICAgICAgICBocmVmPVwiaHR0cHM6Ly9naXRodWIuY29tL3plaXQvbmV4dC5qcy90cmVlL21hc3Rlci9leGFtcGxlc1wiXG4gICAgICAgICAgY2xhc3NOYW1lPVwiY2FyZFwiXG4gICAgICAgID5cbiAgICAgICAgICA8aDM+RXhhbXBsZXMgJnJhcnI7PC9oMz5cbiAgICAgICAgICA8cD5GaW5kIG90aGVyIGV4YW1wbGUgYm9pbGVycGxhdGVzIG9uIHRoZSBOZXh0LmpzIEdpdEh1Yi48L3A+XG4gICAgICAgIDwvYT5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuXG4gICAgPHN0eWxlIGpzeD57YFxuICAgICAgLmhlcm8ge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICB9XG4gICAgICAudGl0bGUge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBwYWRkaW5nLXRvcDogODBweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gICAgICAgIGZvbnQtc2l6ZTogNDhweDtcbiAgICAgIH1cbiAgICAgIC50aXRsZSxcbiAgICAgIC5kZXNjcmlwdGlvbiB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIH1cbiAgICAgIC5yb3cge1xuICAgICAgICBtYXgtd2lkdGg6IDg4MHB4O1xuICAgICAgICBtYXJnaW46IDgwcHggYXV0byA0MHB4O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgICAgIH1cbiAgICAgIC5jYXJkIHtcbiAgICAgICAgcGFkZGluZzogMThweCAxOHB4IDI0cHg7XG4gICAgICAgIHdpZHRoOiAyMjBweDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICBjb2xvcjogIzQzNDM0MztcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzliOWI5YjtcbiAgICAgIH1cbiAgICAgIC5jYXJkOmhvdmVyIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjMDY3ZGY3O1xuICAgICAgfVxuICAgICAgLmNhcmQgaDMge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGNvbG9yOiAjMDY3ZGY3O1xuICAgICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICB9XG4gICAgICAuY2FyZCBwIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAxMnB4IDAgMDtcbiAgICAgICAgZm9udC1zaXplOiAxM3B4O1xuICAgICAgICBjb2xvcjogIzMzMztcbiAgICAgIH1cbiAgICBgfTwvc3R5bGU+XG4gIDwvZGl2PlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgTGFuZGluZztcbiJdfQ== */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar hoverStyles = false ? {\n  name: \"1gzpzei-hoverStyles\",\n  styles: \"&:hover{color:white;background-color:lightgray;border-color:aqua;box-shadow:-15px -15px 0 0 aqua,-30px -30px 0 0 cornflowerblue;};label:hoverStyles;\"\n} : {\n  name: \"1gzpzei-hoverStyles\",\n  styles: \"&:hover{color:white;background-color:lightgray;border-color:aqua;box-shadow:-15px -15px 0 0 aqua,-30px -30px 0 0 cornflowerblue;};label:hoverStyles;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nvar bounce = keyframes(_templateObject());\n\nvar Basic = _styled(\"div\", {\n  target: \"ei2zyl21\",\n  label: \"Basic\"\n})(basicStyles, \";\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\n\nvar Combined = _styled(\"div\", {\n  target: \"ei2zyl22\",\n  label: \"Combined\"\n})(basicStyles, \";\", hoverStyles, \";& code{background-color:linen;}\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\n\nvar Animated = _styled(\"div\", {\n  target: \"ei2zyl23\",\n  label: \"Animated\"\n})(basicStyles, \";\", hoverStyles, \";& code{background-color:linen;}animation:\", function (props) {\n  return props.animation;\n}, \" 0.2s infinite ease-in-out alternate;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));\n\nconsole.warn(\"colors\", colors);\nconsole.warn(\"datum\", datum);\n\nvar _ref = false ? {\n  name: \"jxh8vp-Landing\",\n  styles: \"html,body{margin:0;background:grey;min-height:100%;font-family:Helvetica,Arial,sans-serif;font-size:24px;};label:Landing;\"\n} : {\n  name: \"jxh8vp-Landing\",\n  styles: \"html,body{margin:0;background:grey;min-height:100%;font-family:Helvetica,Arial,sans-serif;font-size:24px;};label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref2 = false ? {\n  name: \"gk20ck-Landing\",\n  styles: \"display:flex;height:100%;width:100%;flex-wrap:wrap;;label:Landing;\"\n} : {\n  name: \"gk20ck-Landing\",\n  styles: \"display:flex;height:100%;width:100%;flex-wrap:wrap;;label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref3 = false ? {\n  name: \"fr23ym-Landing\",\n  styles: \"position:fixed;top:200px;background:white;;label:Landing;\"\n} : {\n  name: \"fr23ym-Landing\",\n  styles: \"position:fixed;top:200px;background:white;;label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref4 = false ? {\n  name: \"m6qkif-Landing\",\n  styles: \"position:fixed;top:276px;left:180px;background:white;width:400px;;label:Landing;\"\n} : {\n  name: \"m6qkif-Landing\",\n  styles: \"position:fixed;top:276px;left:180px;background:white;width:400px;;label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref5 = false ? {\n  name: \"127nob5-Landing\",\n  styles: \"position:fixed;top:376px;left:380px;background:white;width:400px;;label:Landing;\"\n} : {\n  name: \"127nob5-Landing\",\n  styles: \"position:fixed;top:376px;left:380px;background:white;width:400px;;label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref6 = false ? {\n  name: \"2crcfo-Landing\",\n  styles: \"position:fixed;top:476px;left:280px;background:white;width:400px;;label:Landing;\"\n} : {\n  name: \"2crcfo-Landing\",\n  styles: \"position:fixed;top:476px;left:280px;background:white;width:400px;;label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar _ref7 = false ? {\n  name: \"es139f-Landing\",\n  styles: \"position:fixed;top:576px;left:480px;background:white;width:400px;;label:Landing;\"\n} : {\n  name: \"es139f-Landing\",\n  styles: \"position:fixed;top:576px;left:480px;background:white;width:400px;;label:Landing;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\n\nvar Landing = function Landing() {\n  return ___EmotionJSX(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, ___EmotionJSX(Global, {\n    styles: _ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), ___EmotionJSX(\"div\", {\n    css: _ref2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, ___EmotionJSX(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, ___EmotionJSX(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"With Emotion\")), ___EmotionJSX(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, ___EmotionJSX(\"div\", {\n    css: _ref3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"This website is not about you\"), ___EmotionJSX(\"div\", {\n    css: _ref4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"It's about everyone else who's been here except for you\"), ___EmotionJSX(\"div\", {\n    css: _ref5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"each box represents a person who's come here and left their mark: a color and a note\"), ___EmotionJSX(\"div\", {\n    css: _ref6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"every reload page brings up the most recent set of many submissions as will fit on your screen\"), ___EmotionJSX(\"div\", {\n    css: _ref7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"it would be wonderful if you \", ___EmotionJSX(\"a\", {\n    hrof: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"contributed to the wall\"), \", but you'll never see your own box on the screen.\")), colors.map(function (color, index) {\n    console.warn(\"hi\");\n    return ___EmotionJSX(\"div\", {\n      key: index,\n      css:\n      /*#__PURE__*/\n\n      /*#__PURE__*/\n      css(\"height:50px;width:50px;margin:2px;background-color:\", color, \";font-size:24px;border-radius:4px;&:hover{color:\", color, \";};label:Landing;\" + (false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), \";label:Landing;\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    });\n  })));\n};\n\nvar Home = function Home() {\n  return ___EmotionJSX(\"div\", {\n    className: \"jsx-243749409\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, ___EmotionJSX(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, ___EmotionJSX(\"title\", {\n    className: \"jsx-243749409\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Home\"), ___EmotionJSX(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    className: \"jsx-243749409\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  })), ___EmotionJSX(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), ___EmotionJSX(\"div\", {\n    className: \"jsx-243749409\" + \" \" + \"hero\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, ___EmotionJSX(\"h1\", {\n    className: \"jsx-243749409\" + \" \" + \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Welcome to Next.js!\"), ___EmotionJSX(\"p\", {\n    className: \"jsx-243749409\" + \" \" + \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"To get started, edit \", ___EmotionJSX(\"code\", {\n    className: \"jsx-243749409\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"pages/index.js\"), \" and save to reload.\"), ___EmotionJSX(\"div\", {\n    className: \"jsx-243749409\" + \" \" + \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, ___EmotionJSX(\"a\", {\n    href: \"https://nextjs.org/docs\",\n    className: \"jsx-243749409\" + \" \" + \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, ___EmotionJSX(\"h3\", {\n    className: \"jsx-243749409\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Documentation \\u2192\"), ___EmotionJSX(\"p\", {\n    className: \"jsx-243749409\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, \"Learn more about Next.js in the documentation.\")), ___EmotionJSX(\"a\", {\n    href: \"https://nextjs.org/learn\",\n    className: \"jsx-243749409\" + \" \" + \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, ___EmotionJSX(\"h3\", {\n    className: \"jsx-243749409\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"Next.js Learn \\u2192\"), ___EmotionJSX(\"p\", {\n    className: \"jsx-243749409\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, \"Learn about Next.js by following an interactive tutorial!\")), ___EmotionJSX(\"a\", {\n    href: \"https://github.com/zeit/next.js/tree/master/examples\",\n    className: \"jsx-243749409\" + \" \" + \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, ___EmotionJSX(\"h3\", {\n    className: \"jsx-243749409\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Examples \\u2192\"), ___EmotionJSX(\"p\", {\n    className: \"jsx-243749409\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Find other example boilerplates on the Next.js GitHub.\")))), ___EmotionJSX(_JSXStyle, {\n    id: \"243749409\",\n    __self: this\n  }, \".hero.jsx-243749409{width:100%;color:#333;}.title.jsx-243749409{margin:0;width:100%;padding-top:80px;line-height:1.15;font-size:48px;}.title.jsx-243749409,.description.jsx-243749409{text-align:center;}.row.jsx-243749409{max-width:880px;margin:80px auto 40px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:space-around;-webkit-justify-content:space-around;-ms-flex-pack:space-around;justify-content:space-around;}.card.jsx-243749409{padding:18px 18px 24px;width:220px;text-align:left;-webkit-text-decoration:none;text-decoration:none;color:#434343;border:1px solid #9b9b9b;}.card.jsx-243749409:hover{border-color:#067df7;}.card.jsx-243749409 h3.jsx-243749409{margin:0;color:#067df7;font-size:18px;}.card.jsx-243749409 p.jsx-243749409{margin:0;padding:12px 0 0;font-size:13px;color:#333;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/ygoldobin/yanton/thiswebsiteisnotaboutyou/pages/index.js */\"));\n};\n\nexport default Landing;","map":{"version":3,"sources":["/Users/ygoldobin/yanton/thiswebsiteisnotaboutyou/pages/index.js"],"names":["React","Head","chroma","css","jsx","Global","keyframes","Nav","datum","fill","colors","scale","mode","buttons","map","color","Button","basicStyles","hoverStyles","bounce","Basic","Combined","Animated","props","animation","console","warn","Landing","index","Home"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Head from \"next/head\";\nimport chroma from \"chroma-js\";\nimport styled from \"@emotion/styled\";\nimport { css, jsx, Global, keyframes } from \"@emotion/core\";\n\nimport Nav from \"../components/nav\";\n\nconst datum = Array.from(true).fill(10);\nconst colors = chroma\n  .scale([\"#fafa6e\", \"#2A4858\"])\n  .mode(\"lch\")\n  .colors(600);\n\nconst buttons = colors.map(color => {\n  const Button = styled.button`\n    padding: 32px;\n    background-color: hotpink;\n    font-size: 24px;\n    border-radius: 4px;\n    color: black;\n    font-weight: bold;\n    &:hover {\n      color: white;\n    }\n  `;\n\n  return Button;\n});\n\nconst basicStyles = css`\n  background-color: white;\n  color: cornflowerblue;\n  border: 1px solid lightgreen;\n  border-right: none;\n  border-bottom: none;\n  box-shadow: 5px 5px 0 0 lightgreen, 10px 10px 0 0 lightyellow;\n  transition: all 0.1s linear;\n  margin: 3rem 0;\n  padding: 1rem 0.5rem;\n`;\nconst hoverStyles = css`\n  &:hover {\n    color: white;\n    background-color: lightgray;\n    border-color: aqua;\n    box-shadow: -15px -15px 0 0 aqua, -30px -30px 0 0 cornflowerblue;\n  }\n`;\nconst bounce = keyframes`\n  from {\n    transform: scale(1.01);\n  }\n  to {\n    transform: scale(0.99);\n  }\n`;\n\nconst Basic = styled.div`\n  ${basicStyles};\n`;\n\nconst Combined = styled.div`\n  ${basicStyles};\n  ${hoverStyles};\n  & code {\n    background-color: linen;\n  }\n`;\nconst Animated = styled.div`\n  ${basicStyles};\n  ${hoverStyles};\n  & code {\n    background-color: linen;\n  }\n  animation: ${props => props.animation} 0.2s infinite ease-in-out alternate;\n`;\n\nconsole.warn(\"colors\", colors);\n\nconsole.warn(\"datum\", datum);\n\nconst Landing = () => (\n  <React.Fragment>\n    <Global\n      styles={css`\n        html,\n        body {\n          margin: 0;\n          background: grey;\n          min-height: 100%;\n          font-family: Helvetica, Arial, sans-serif;\n          font-size: 24px;\n        }\n      `}\n    />\n    <div\n      css={css`\n        display: flex;\n        height: 100%;\n        width: 100%;\n        flex-wrap: wrap;\n      `}\n    >\n      <Head>\n        <title>With Emotion</title>\n      </Head>\n      <div>\n        <div\n          css={css`\n            position: fixed;\n            top: 200px;\n            background: white;\n          `}\n        >\n          This website is not about you\n        </div>\n        <div\n          css={css`\n            position: fixed;\n            top: 276px;\n            left: 180px;\n            background: white;\n\n            width: 400px;\n          `}\n        >\n          It's about everyone else who's been here except for you\n        </div>\n        <div\n          css={css`\n            position: fixed;\n            top: 376px;\n            left: 380px;\n            background: white;\n\n            width: 400px;\n          `}\n        >\n          each box represents a person who's come here and left their mark: a\n          color and a note\n        </div>\n        <div\n          css={css`\n            position: fixed;\n            top: 476px;\n            left: 280px;\n            background: white;\n\n            width: 400px;\n          `}\n        >\n          every reload page brings up the most recent set of many submissions as\n          will fit on your screen\n        </div>\n\n        <div\n          css={css`\n            position: fixed;\n            top: 576px;\n            left: 480px;\n            background: white;\n            width: 400px;\n          `}\n        >\n          it would be wonderful if you <a hrof=\"\">contributed to the wall</a>,\n          but you'll never see your own box on the screen.\n        </div>\n      </div>\n      {colors.map((color, index) => {\n        console.warn(\"hi\");\n        return (\n          <div\n            key={index}\n            css={css`\n              /* margin: 10px; */\n              height: 50px;\n              width: 50px;\n              margin: 2px;\n              background-color: ${color};\n              font-size: 24px;\n              border-radius: 4px;\n              &:hover {\n                color: ${color};\n              }\n            `}\n          />\n        );\n      })}\n    </div>\n  </React.Fragment>\n);\n\nconst Home = () => (\n  <div>\n    <Head>\n      <title>Home</title>\n      <link rel=\"icon\" href=\"/favicon.ico\" />\n    </Head>\n\n    <Nav />\n\n    <div className=\"hero\">\n      <h1 className=\"title\">Welcome to Next.js!</h1>\n      <p className=\"description\">\n        To get started, edit <code>pages/index.js</code> and save to reload.\n      </p>\n\n      <div className=\"row\">\n        <a href=\"https://nextjs.org/docs\" className=\"card\">\n          <h3>Documentation &rarr;</h3>\n          <p>Learn more about Next.js in the documentation.</p>\n        </a>\n        <a href=\"https://nextjs.org/learn\" className=\"card\">\n          <h3>Next.js Learn &rarr;</h3>\n          <p>Learn about Next.js by following an interactive tutorial!</p>\n        </a>\n        <a\n          href=\"https://github.com/zeit/next.js/tree/master/examples\"\n          className=\"card\"\n        >\n          <h3>Examples &rarr;</h3>\n          <p>Find other example boilerplates on the Next.js GitHub.</p>\n        </a>\n      </div>\n    </div>\n\n    <style jsx>{`\n      .hero {\n        width: 100%;\n        color: #333;\n      }\n      .title {\n        margin: 0;\n        width: 100%;\n        padding-top: 80px;\n        line-height: 1.15;\n        font-size: 48px;\n      }\n      .title,\n      .description {\n        text-align: center;\n      }\n      .row {\n        max-width: 880px;\n        margin: 80px auto 40px;\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n      }\n      .card {\n        padding: 18px 18px 24px;\n        width: 220px;\n        text-align: left;\n        text-decoration: none;\n        color: #434343;\n        border: 1px solid #9b9b9b;\n      }\n      .card:hover {\n        border-color: #067df7;\n      }\n      .card h3 {\n        margin: 0;\n        color: #067df7;\n        font-size: 18px;\n      }\n      .card p {\n        margin: 0;\n        padding: 12px 0 0;\n        font-size: 13px;\n        color: #333;\n      }\n    `}</style>\n  </div>\n);\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}